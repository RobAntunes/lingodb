name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-audit:
    name: Rust Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run Rust security audit
      run: cargo audit --deny warnings

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      matrix:
        language: [ 'rust', 'javascript' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    
    - name: Setup Rust (for Rust analysis)
      if: matrix.language == 'rust'
      uses: dtolnay/rust-toolchain@stable
    
    - name: Build Rust (for CodeQL)
      if: matrix.language == 'rust'
      run: cargo build --verbose
    
    - name: Setup Node.js (for JavaScript analysis)
      if: matrix.language == 'javascript'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install JS dependencies (for JavaScript analysis)
      if: matrix.language == 'javascript'
      run: |
        cd js
        npm ci
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  npm-audit:
    name: npm Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd js
        npm ci
    
    - name: Run npm audit
      run: |
        cd js
        npm audit --audit-level=moderate
    
    - name: Check for vulnerabilities
      run: |
        cd js
        npm audit --audit-level=high --production

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-license
      run: cargo install cargo-license
    
    - name: Check Rust dependencies licenses
      run: cargo license --json > rust-licenses.json
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install license-checker
      run: npm install -g license-checker
    
    - name: Check JS dependencies licenses
      run: |
        cd js
        npm ci
        license-checker --json > ../js-licenses.json
    
    - name: Upload license reports
      uses: actions/upload-artifact@v4
      with:
        name: license-reports
        path: |
          rust-licenses.json
          js-licenses.json

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified